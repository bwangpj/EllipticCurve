{"name":"Mathlib.Algebra.Category.Ring.Constructions","instances":[{"typeNames":["Quiver.Hom"],"name":"CommRingCat.instUniqueHomOfPUnit","className":"Unique"},{"typeNames":["CommRingCat"],"name":"CommRingCat.commRingCat_hasStrictTerminalObjects","className":"CategoryTheory.Limits.HasStrictTerminalObjects"},{"typeNames":["CommRingCat.Hom.hom"],"name":"CommRingCat.instIsLocalHomCarrierObjWalkingParallelPairFunctorConstPtEqualizerForkZeroParallelPairRingHomHomι","className":"IsLocalHom"},{"typeNames":["CommRingCat.Hom.hom"],"name":"CommRingCat.equalizer_ι_isLocalHom","className":"IsLocalHom"},{"typeNames":["CommRingCat.Hom.hom"],"name":"CommRingCat.equalizer_ι_isLocalHom'","className":"IsLocalHom"}],"imports":["Init","Mathlib.Algebra.Category.Ring.Instances","Mathlib.Algebra.Category.Ring.Limits","Mathlib.Tactic.Algebraize","Mathlib.CategoryTheory.Limits.Shapes.Pullback.CommSq","Mathlib.CategoryTheory.Limits.Shapes.StrictInitial","Mathlib.RingTheory.TensorProduct.Basic","Mathlib.RingTheory.IsTensorProduct"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L374-L394","name":"CommRingCat.pullbackConeIsLimit","line":374,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pullbackConeIsLimit","doc":"The constructed pullback cone is indeed the limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pullbackConeIsLimit\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">pullbackConeIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pullbackCone\">pullbackCone</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L359-L372","name":"CommRingCat.pullbackCone","line":359,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pullbackCone","doc":"In the category of `CommRingCat`, the pullback of `f : A ⟶ C` and `g : B ⟶ C` is the `eqLocus`\nof the two maps `A × B ⟶ C`. This is the constructed pullback cone.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pullbackCone\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">pullbackCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone\">CategoryTheory.Limits.PullbackCone</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L344-L353","name":"CommRingCat.equalizer_ι_isLocalHom'","line":344,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizer_ι_isLocalHom'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizer_ι_isLocalHom'\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">equalizer_ι_isLocalHom'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">CategoryTheory.Limits.WalkingParallelPair</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsLocalHom\">IsLocalHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.limit.π\">CategoryTheory.Limits.limit.π</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.one\">CategoryTheory.Limits.WalkingParallelPair.one</a>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L326-L338","name":"CommRingCat.equalizer_ι_isLocalHom","line":326,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizer_ι_isLocalHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizer_ι_isLocalHom\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">equalizer_ι_isLocalHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">CategoryTheory.Limits.WalkingParallelPair</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsLocalHom\">IsLocalHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.limit.π\">CategoryTheory.Limits.limit.π</a> <span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.zero\">CategoryTheory.Limits.WalkingParallelPair.zero</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L316-L324","name":"CommRingCat.instIsLocalHomCarrierObjWalkingParallelPairFunctorConstPtEqualizerForkZeroParallelPairRingHomHomι","line":316,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.instIsLocalHomCarrierObjWalkingParallelPairFunctorConstPtEqualizerForkZeroParallelPairRingHomHomι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.instIsLocalHomCarrierObjWalkingParallelPairFunctorConstPtEqualizerForkZeroParallelPairRingHomHomι\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">instIsLocalHomCarrierObjWalkingParallelPairFunctorConstPtEqualizerForkZeroParallelPairRingHomHomι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsLocalHom\">IsLocalHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizerFork\">equalizerFork</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ι\">ι</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L304-L314","name":"CommRingCat.equalizerForkIsLimit","line":304,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizerForkIsLimit","doc":"The equalizer in `CommRingCat` is the equalizer as sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizerForkIsLimit\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">equalizerForkIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizerFork\">equalizerFork</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L298-L302","name":"CommRingCat.equalizerFork","line":298,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizerFork","doc":"The equalizer in `CommRingCat` is the equalizer as sets. This is the equalizer fork. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.equalizerFork\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">equalizerFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">CategoryTheory.Limits.Fork</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L285-L290","name":"RingEquiv.piEquivPi","line":285,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#RingEquiv.piEquivPi","doc":"The categorical product and the usual product agrees\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#RingEquiv.piEquivPi\"><span class=\"name\">RingEquiv</span>.<span class=\"name\">piEquivPi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">CommRingCat.of</a> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">i</span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">i</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L279-L283","name":"CommRingCat.piIsoPi","line":279,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piIsoPi","doc":"The categorical product and the usual product agrees\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piIsoPi\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">piIsoPi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">i</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L270-L277","name":"CommRingCat.piFanIsLimit","line":270,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piFanIsLimit","doc":"The categorical product of rings is the cartesian product of rings.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piFanIsLimit\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">piFanIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piFan\">piFan</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L266-L266","name":"CommRingCat.piFan_pt","line":266,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piFan_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piFan_pt\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">piFan_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piFan\">piFan</a> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">i</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L263-L268","name":"CommRingCat.piFan","line":263,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piFan","doc":"The categorical product of rings is the cartesian product of rings. This is its `Fan`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.piFan\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">piFan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Fan\">CategoryTheory.Limits.Fan</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L240-L255","name":"CommRingCat.prodFanIsLimit","line":240,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.prodFanIsLimit","doc":"The product in `CommRingCat` is the cartesian product. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.prodFanIsLimit\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">prodFanIsLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.prodFan\">prodFan</a></span> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L236-L236","name":"CommRingCat.prodFan_pt","line":236,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.prodFan_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.prodFan_pt\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">prodFan_pt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.prodFan\">prodFan</a></span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> (<span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L235-L238","name":"CommRingCat.prodFan","line":235,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.prodFan","doc":"The product in `CommRingCat` is the cartesian product. This is the binary fan. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.prodFan\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">prodFan</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryFan\">CategoryTheory.Limits.BinaryFan</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L220-L227","name":"CommRingCat.isInitial","line":220,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.isInitial","doc":"`ULift.{u} ℤ` is initial in `CommRingCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.isInitial\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">isInitial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/IsTerminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L215-L218","name":"CommRingCat.zIsInitial","line":215,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.zIsInitial","doc":"`ℤ` is the initial object of `CommRingCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.zIsInitial\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">zIsInitial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/IsTerminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L211-L213","name":"CommRingCat.subsingleton_of_isTerminal","line":211,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.subsingleton_of_isTerminal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.subsingleton_of_isTerminal\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">subsingleton_of_isTerminal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/IsTerminal.html#CategoryTheory.Limits.IsTerminal\">CategoryTheory.Limits.IsTerminal</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L199-L209","name":"CommRingCat.commRingCat_hasStrictTerminalObjects","line":199,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.commRingCat_hasStrictTerminalObjects","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.commRingCat_hasStrictTerminalObjects\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">commRingCat_hasStrictTerminalObjects</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.HasStrictTerminalObjects\">CategoryTheory.Limits.HasStrictTerminalObjects</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L195-L197","name":"CommRingCat.punitIsTerminal","line":195,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.punitIsTerminal","doc":"The trivial ring is the (strict) terminal object of `CommRingCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.punitIsTerminal\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">punitIsTerminal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/IsTerminal.html#CategoryTheory.Limits.IsTerminal\">CategoryTheory.Limits.IsTerminal</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L192-L193","name":"CommRingCat.instUniqueHomOfPUnit","line":192,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.instUniqueHomOfPUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.instUniqueHomOfPUnit\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">instUniqueHomOfPUnit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> (<span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L183-L185","name":"CommRingCat.coproductColimitCocone","line":183,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductColimitCocone","doc":"The limit cone of the tensor product `A ⊗[ℤ] B` in `CommRingCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductColimitCocone\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">coproductColimitCocone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.ColimitCocone\">CategoryTheory.Limits.ColimitCocone</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.pair\">CategoryTheory.Limits.pair</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L164-L164","name":"CommRingCat.coproductCoconeIsColimit_desc","line":164,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCoconeIsColimit_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCoconeIsColimit_desc\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">coproductCoconeIsColimit_desc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan\">CategoryTheory.Limits.BinaryCofan</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCoconeIsColimit\">coproductCoconeIsColimit</a></span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">desc</a></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.lift\">Algebra.TensorProduct.lift</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan.inl\">inl</a></span>)</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#RingHom.toIntAlgHom\">toIntAlgHom</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan.inr\">inr</a></span>)</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#RingHom.toIntAlgHom\">toIntAlgHom</a></span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toRingHom\">toRingHom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L163-L181","name":"CommRingCat.coproductCoconeIsColimit","line":163,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCoconeIsColimit","doc":"The tensor product `A ⊗[ℤ] B` is a coproduct for `A` and `B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCoconeIsColimit\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">coproductCoconeIsColimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone\">coproductCocone</a></span> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L159-L161","name":"CommRingCat.coproductCocone_inr","line":159,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone_inr\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">coproductCocone_inr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone\">coproductCocone</a></span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan.inr\">inr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.includeRight\">Algebra.TensorProduct.includeRight</a>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toRingHom\">toRingHom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L155-L157","name":"CommRingCat.coproductCocone_inl","line":155,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone_inl\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">coproductCocone_inl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone\">coproductCocone</a></span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan.inl\">inl</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.includeLeft\">Algebra.TensorProduct.includeLeft</a>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toRingHom\">toRingHom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L149-L149","name":"CommRingCat.coproductCocone_pt","line":149,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone_pt\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">coproductCocone_pt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone\">coproductCocone</a></span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">↑<span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L149-L149","name":"CommRingCat.coproductCocone_ι","line":149,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone_ι\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">coproductCocone_ι</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone\">coproductCocone</a></span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.mk\">{</a>     <span class=\"fn\">app</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.WalkingPair\">CategoryTheory.Limits.WalkingPair</a></span>) =&gt;\n      <span class=\"fn\">match <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span> with\n      | <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.WalkingPair.left\">CategoryTheory.Limits.WalkingPair.left</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">↑<a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.includeLeft\">Algebra.TensorProduct.includeLeft</a></span></span>\n      | <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.WalkingPair.right\">CategoryTheory.Limits.WalkingPair.right</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">↑<a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.includeRight\">Algebra.TensorProduct.includeRight</a></span></span></span></span>,\n    <span class=\"fn\">naturality</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.mk\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L148-L153","name":"CommRingCat.coproductCocone","line":148,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone","doc":"The tensor product `A ⊗[ℤ] B` forms a cocone for `A` and `B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.coproductCocone\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">coproductCocone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan\">CategoryTheory.Limits.BinaryCofan</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L129-L140","name":"CommRingCat.closure_range_union_range_eq_top_of_isPushout","line":129,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.closure_range_union_range_eq_top_of_isPushout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.closure_range_union_range_eq_top_of_isPushout\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">closure_range_union_range_eq_top_of_isPushout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">X</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPushout\">CategoryTheory.IsPushout</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Subring/Basic.html#Subring.closure\">Subring.closure</a>\n    (<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">a</span>)</span></span></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">b</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L120-L127","name":"CommRingCat.isPushout_of_isPushout","line":120,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.isPushout_of_isPushout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.isPushout_of_isPushout\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">isPushout_of_isPushout</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">S </span><span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/IsTensorProduct.html#Algebra.IsPushout\">Algebra.IsPushout</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPushout\">CategoryTheory.IsPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L110-L118","name":"CommRingCat.isPushout_tensorProduct","line":110,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.isPushout_tensorProduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.isPushout_tensorProduct\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">isPushout_tensorProduct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPushout\">CategoryTheory.IsPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.includeLeftRingHom\">Algebra.TensorProduct.includeLeftRingHom</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.includeRight\">Algebra.TensorProduct.includeRight</a>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toRingHom\">toRingHom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L68-L108","name":"CommRingCat.pushoutCoconeIsColimit","line":68,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCoconeIsColimit","doc":"Verify that the `pushout_cocone` is indeed the colimit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCoconeIsColimit\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">pushoutCoconeIsColimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone\">pushoutCocone</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L63-L66","name":"CommRingCat.pushoutCocone_pt","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone_pt\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">pushoutCocone_pt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone\">pushoutCocone</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.of\">of</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L58-L61","name":"CommRingCat.pushoutCocone_inr","line":58,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone_inr\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">pushoutCocone_inr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone\">pushoutCocone</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PushoutCocone.inr\">inr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.includeRight\">Algebra.TensorProduct.includeRight</a>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toRingHom\">toRingHom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L53-L56","name":"CommRingCat.pushoutCocone_inl","line":53,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone_inl\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">pushoutCocone_inl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone\">pushoutCocone</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PushoutCocone.inl\">inl</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <a href=\"./Mathlib/RingTheory/TensorProduct/Basic.html#Algebra.TensorProduct.includeLeftRingHom\">Algebra.TensorProduct.includeLeftRingHom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/Ring/Constructions.lean#L41-L51","name":"CommRingCat.pushoutCocone","line":41,"kind":"def","docLink":"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone","doc":"The explicit cocone with tensor products as the fibered product in `CommRingCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/Constructions.html#CommRingCat.pushoutCocone\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">pushoutCocone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PushoutCocone\">CategoryTheory.Limits.PushoutCocone</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span>)</span>)</span></span></div></div>"}]}