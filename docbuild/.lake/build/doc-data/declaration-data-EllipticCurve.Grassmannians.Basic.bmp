{"name":"EllipticCurve.Grassmannians.Basic","instances":[],"imports":["Init","EllipticCurve.Lemmas","Mathlib.Algebra.Category.Ring.Under.Basic","Mathlib.CategoryTheory.Comma.Over.Basic","Mathlib.LinearAlgebra.TensorProduct.Quotient","Mathlib.LinearAlgebra.TensorProduct.Tower","Mathlib.RingTheory.Spectrum.Prime.FreeLocus","Mathlib.RingTheory.Grassmannian"],"declarations":[{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L362-L365","name":"Module.Grassmannian.Corepresentable.leftFunctor","line":362,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftFunctor","doc":"`left` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftFunctor\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">leftFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Under\">CategoryTheory.Under</a> <span class=\"fn\">R</span>)</span> <a href=\"./foundational_types.html\">(Type</a> (max u v))</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L356-L358","name":"Module.Grassmannian.Corepresentable.leftMap_comp","line":356,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap_comp\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">leftMap_comp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap\">leftMap</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">φ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap\">leftMap</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap\">leftMap</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L353-L354","name":"Module.Grassmannian.Corepresentable.leftMap_id","line":353,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap_id\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">leftMap_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap\">leftMap</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L349-L351","name":"Module.Grassmannian.Corepresentable.leftMap_one_tmul","line":349,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap_one_tmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap_one_tmul\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">leftMap_one_tmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap\">leftMap</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">φ</span> <span class=\"fn\">f</span>)</span> (<span class=\"fn\">1</span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.tmul\">⊗ₜ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.tmul\">]</a> <span class=\"fn\">m</span>) <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\">f</span> (<span class=\"fn\">1</span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.tmul\">⊗ₜ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.tmul\">]</a> <span class=\"fn\">m</span>) <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L343-L347","name":"Module.Grassmannian.Corepresentable.leftMap_tmul","line":343,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap_tmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap_tmul\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">leftMap_tmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap\">leftMap</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">φ</span> <span class=\"fn\">f</span>)</span> (<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.tmul\">⊗ₜ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.tmul\">]</a> <span class=\"fn\">m</span>) <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\">f</span> (<span class=\"fn\">a</span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.tmul\">⊗ₜ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.tmul\">]</a> <span class=\"fn\">m</span>) <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L337-L340","name":"Module.Grassmannian.Corepresentable.leftMap","line":337,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap","doc":"Base change of `left` from `A` to `B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftMap\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">leftMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">B</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L333-L335","name":"Module.Grassmannian.Corepresentable.leftBaseChange","line":333,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftBaseChange","doc":"Base change of `left` from `R` to `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.leftBaseChange\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">leftBaseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L322-L330","name":"Module.Grassmannian.Corepresentable.chartEquivEq","line":322,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.chartEquivEq","doc":"The isomorphism between `chart x` and the equaliser of `compose, const1 : left ⟶ right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.chartEquivEq\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">chartEquivEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.compose\">compose</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.const1\">const1</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L318-L320","name":"Module.Grassmannian.Corepresentable.surjective_of_compose_eq_const1","line":318,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.surjective_of_compose_eq_const1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.surjective_of_compose_eq_const1\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">surjective_of_compose_eq_const1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.compose\">compose</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.const1\">const1</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L313-L315","name":"Module.Grassmannian.Corepresentable.const1","line":313,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.const1","doc":"The second map `left ⟶ right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.const1\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">const1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span> → <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.right\">right</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L308-L310","name":"Module.Grassmannian.Corepresentable.compose","line":308,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.compose","doc":"The first map `left ⟶ right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.compose\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">compose</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\">left</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span> → <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.right\">right</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L303-L305","name":"Module.Grassmannian.Corepresentable.right","line":303,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.right","doc":"The second module in the equaliser diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.right\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L299-L301","name":"Module.Grassmannian.Corepresentable.left","line":299,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left","doc":"The first module in the equaliser diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.Corepresentable.left\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">Corepresentable</span>.<span class=\"name\">left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L280-L284","name":"Module.Grassmannian.chartToFunctor","line":280,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartToFunctor","doc":"`chartFunctor R M k x` is a subfunctor of `Grassmannian.functor R M k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartToFunctor\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">chartToFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor\">chartFunctor</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor\">functor</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L271-L271","name":"Module.Grassmannian.chartFunctor_map_coe_carrier","line":271,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor_map_coe_carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor_map_coe_carrier\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">chartFunctor_map_coe_carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Under\">CategoryTheory.Under</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span>)</span> (<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.mk\">TensorProduct.mk</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">x</span>))</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor\">chartFunctor</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span> <span class=\"fn\">N</span>)</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subsemigroup/Defs.html#AddSubsemigroup.carrier\">carrier</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Tower.html#TensorProduct.AlgebraTensorModule.cancelBaseChange\">TensorProduct.AlgebraTensorModule.cancelBaseChange</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a>     <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Tower.html#Submodule.baseChange\">Submodule.baseChange</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">Y✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L271-L271","name":"Module.Grassmannian.chartFunctor_obj","line":271,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor_obj\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">chartFunctor_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Under\">CategoryTheory.Under</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor\">chartFunctor</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span>)</span> (<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.mk\">TensorProduct.mk</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">x</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L267-L278","name":"Module.Grassmannian.chartFunctor","line":267,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor","doc":"A subfunctor of the Grassmannian, given an indexing `x : Fin k → M`, `chart x` selects the\nelements `N ∈ G(k, A ⊗[R] M; A)` such that the composition `A^k → A ⊗[R] M → (A ⊗[R] M)/N.val` is\nan isomorphism. This is called `chart` because it corresponds to an affine open chart in the\nGrassmannian. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chartFunctor\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">chartFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Under\">CategoryTheory.Under</a> <span class=\"fn\">R</span>)</span> <a href=\"./foundational_types.html\">(Type</a> (max u v))</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L262-L265","name":"Module.Grassmannian.map_chart_subset","line":262,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_chart_subset","doc":"Functoriality of `chart`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_chart_subset\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">map_chart_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">A</span> (<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.mk\">TensorProduct.mk</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">B</span> (<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.mk\">TensorProduct.mk</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">x</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L243-L260","name":"Module.Grassmannian.map_mem_chart","line":243,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_mem_chart","doc":"Functoriality of `chart`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_mem_chart\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">map_mem_chart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">A</span> (<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.mk\">TensorProduct.mk</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">x</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">B</span> (<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.mk\">TensorProduct.mk</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">x</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L238-L241","name":"Module.Grassmannian.baseChange_chart_subset","line":238,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange_chart_subset","doc":"Functoriality of `chart`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange_chart_subset\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">baseChange_chart_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange\">baseChange</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">A</span> (<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.mk\">TensorProduct.mk</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L231-L236","name":"Module.Grassmannian.baseChange_mem_chart","line":231,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange_mem_chart","doc":"Functoriality of `chart`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange_mem_chart\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">baseChange_mem_chart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange\">baseChange</a> <span class=\"fn\">A</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">A</span> (<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct.mk\">TensorProduct.mk</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L224-L224","name":"Module.Grassmannian.functor_map_carrier","line":224,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor_map_carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor_map_carrier\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">functor_map_carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Under\">CategoryTheory.Under</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor\">functor</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subsemigroup/Defs.html#AddSubsemigroup.carrier\">carrier</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Tower.html#TensorProduct.AlgebraTensorModule.cancelBaseChange\">TensorProduct.AlgebraTensorModule.cancelBaseChange</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a>     <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Tower.html#Submodule.baseChange\">Submodule.baseChange</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">Y✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span>)</span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L224-L224","name":"Module.Grassmannian.functor_obj","line":224,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor_obj\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">functor_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Under\">CategoryTheory.Under</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor\">functor</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L222-L229","name":"Module.Grassmannian.functor","line":222,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor","doc":"The Grassmannian functor given a ring `R`, an `R`-module `M`, and a natural number `k`.\nGiven an `R`-algebra `A`, we return the set `G(k, A ⊗[R] M; A)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.functor\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Under\">CategoryTheory.Under</a> <span class=\"fn\">R</span>)</span> <a href=\"./foundational_types.html\">(Type</a> (max u v))</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L212-L220","name":"Module.Grassmannian.map_comp","line":212,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_comp\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">g</span> <span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">N</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L206-L208","name":"Module.Grassmannian.map_id","line":206,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_id\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L199-L204","name":"Module.Grassmannian.map_eq","line":199,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map_eq\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Tower.html#IsScalarTower.toAlgHom\">IsScalarTower.toAlgHom</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearEquiv\">ofLinearEquiv</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Tower.html#TensorProduct.AlgebraTensorModule.cancelBaseChange\">TensorProduct.AlgebraTensorModule.cancelBaseChange</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <span class=\"fn\">M</span>)</span>)</span> <span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange\">baseChange</a> <span class=\"fn\">B</span> <span class=\"fn\">N</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L195-L197","name":"Module.Grassmannian.coe_map'","line":195,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_map'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_map'\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_map'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.span\">Submodule.span</a> <span class=\"fn\">B</span> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Submodule/Map.html#Submodule.map\">Submodule.map</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#LinearMap.rTensor\">LinearMap.rTensor</a> <span class=\"fn\">M</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toLinearMap\">toLinearMap</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Submodule/RestrictScalars.html#Submodule.restrictScalars\">Submodule.restrictScalars</a> <span class=\"fn\">R</span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L188-L193","name":"Module.Grassmannian.coe_map","line":188,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_map\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.span\">Submodule.span</a> <span class=\"fn\">B</span> (<span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#LinearMap.rTensor\">LinearMap.rTensor</a> <span class=\"fn\">M</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toLinearMap\">toLinearMap</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L177-L186","name":"Module.Grassmannian.map","line":177,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map","doc":"Functoriality of Grassmannian in the category of `R`-algebras. Note that given an `R`-algebra\n`A`, we replace `M` with `A ⊗[R] M`. The map `f : A →ₐ[R] B` should technically provide an instance\n`[Algebra A B]`, but this might cause problems later down the line, so we do not require this\ninstance in the type signature of the function. Instead, given any instance `[Algebra A B]`, we\nlater prove that the map is equal to the one induced by `IsScalarTower.toAlgHom R A B : A →ₐ[R] B`.\nSee `map_val` and `map_eq`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.map\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">B</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L170-L173","name":"Module.Grassmannian.quotientBaseChangeEquiv","line":170,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.quotientBaseChangeEquiv","doc":"The quotient of `baseChange` is isomorphic to the base change of the quotient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.quotientBaseChangeEquiv\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">quotientBaseChangeEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange\">baseChange</a> <span class=\"fn\">A</span> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">A</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L168-L168","name":"Module.Grassmannian.coe_baseChange","line":168,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_baseChange\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange\">baseChange</a> <span class=\"fn\">A</span> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Tower.html#Submodule.baseChange\">Submodule.baseChange</a> <span class=\"fn\">A</span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L163-L166","name":"Module.Grassmannian.baseChange","line":163,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange","doc":"Base change to an `R`-algebra `A`, where `M` is replaced with `A ⊗[R] M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.baseChange\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorProduct/Basic.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L157-L159","name":"Module.Grassmannian.exists_ofSurjective_mem_chart","line":157,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.exists_ofSurjective_mem_chart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.exists_ofSurjective_mem_chart\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">exists_ofSurjective_mem_chart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">q</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>), <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofSurjective\">ofSurjective</a> <span class=\"fn\">q</span> <span class=\"fn\">hq</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L153-L155","name":"Module.Grassmannian.exists_ofEquiv_mem_chart","line":153,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.exists_ofEquiv_mem_chart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.exists_ofEquiv_mem_chart\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">exists_ofEquiv_mem_chart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>), <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofEquiv\">ofEquiv</a> <span class=\"fn\">N</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L148-L151","name":"Module.Grassmannian.ofSurjective_mem_chart","line":148,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofSurjective_mem_chart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofSurjective_mem_chart\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">ofSurjective_mem_chart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">q</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Pi/Basic.html#Pi.single\">Pi.single</a> <span class=\"fn\">i</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofSurjective\">ofSurjective</a> <span class=\"fn\">q</span> <span class=\"fn\">hq</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L139-L146","name":"Module.Grassmannian.ofEquiv_mem_chart","line":139,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofEquiv_mem_chart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofEquiv_mem_chart\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">ofEquiv_mem_chart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Quotient/Defs.html#Submodule.Quotient.mk\">Submodule.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">i</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Pi/Basic.html#Pi.single\">Pi.single</a> <span class=\"fn\">i</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofEquiv\">ofEquiv</a> <span class=\"fn\">N</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L134-L137","name":"Module.Grassmannian.equivOfChart_apply_apply","line":134,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.equivOfChart_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.equivOfChart_apply_apply\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">equivOfChart_apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.equivOfChart\">equivOfChart</a> <span class=\"fn\">hn</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Quotient/Defs.html#Submodule.Quotient.mk\">Submodule.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L129-L132","name":"Module.Grassmannian.equivOfChart_apply","line":129,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.equivOfChart_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.equivOfChart_apply\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">equivOfChart_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.equivOfChart\">equivOfChart</a> <span class=\"fn\">hn</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Quotient/Defs.html#Submodule.Quotient.mk\">Submodule.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">i</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Pi/Basic.html#Pi.single\">Pi.single</a> <span class=\"fn\">i</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L124-L127","name":"Module.Grassmannian.equivOfChart","line":124,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.equivOfChart","doc":"An element `N ∈ chart R f` produces an isomorphism `M ⧸ N ≃ₗ[R] R^k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.equivOfChart\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">equivOfChart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\">chart</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L117-L120","name":"Module.Grassmannian.chart","line":117,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart","doc":"The affine chart corresponding to a chosen `x : R^k → M`, represented by `k` elements in `M`.\nIt is the quotients `q : M ↠ V` such that the composition `x ∘ q : R^k → V` is an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.chart\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">chart</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L111-L114","name":"Module.Grassmannian.ofLinearEquivEquiv","line":111,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearEquivEquiv","doc":"The quotients of `ofLinearEquiv` are isomorphic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearEquivEquiv\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">ofLinearEquivEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">M₁</span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">M₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">M₂</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearEquiv\">ofLinearEquiv</a> <span class=\"fn\">e</span>)</span> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">M₁</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L107-L109","name":"Module.Grassmannian.coe_ofLinearEquiv","line":107,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_ofLinearEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_ofLinearEquiv\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_ofLinearEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">M₁</span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">M₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearEquiv\">ofLinearEquiv</a> <span class=\"fn\">e</span>)</span> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Map.html#Submodule.map\">Submodule.map</a> <span class=\"fn\">e</span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L100-L105","name":"Module.Grassmannian.ofLinearEquiv","line":100,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearEquiv","doc":"If `M₁` and `M₂` are isomorphic, then `G(k, M₁; R) ≃ G(k, M₂; R)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearEquiv\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">ofLinearEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">M₁</span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">M₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L96-L98","name":"Module.Grassmannian.coe_ofLinearMap","line":96,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_ofLinearMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_ofLinearMap\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_ofLinearMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">M₁</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">M₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearMap\">ofLinearMap</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Map.html#Submodule.comap\">Submodule.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L91-L94","name":"Module.Grassmannian.ofLinearMap","line":91,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearMap","doc":"If `M₁` surjects to `M₂`, then there is an induced map `G(k, M₂; R) → G(k, M₁; R)` by\n\"pulling back\" a submodule. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofLinearMap\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">ofLinearMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">M₁</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">M₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L84-L86","name":"Module.Grassmannian.coe_ofSurjective","line":84,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_ofSurjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_ofSurjective\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_ofSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofSurjective\">ofSurjective</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Ker.html#LinearMap.ker\">LinearMap.ker</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L80-L82","name":"Module.Grassmannian.ofSurjective","line":80,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofSurjective","doc":"Given a surjection `M ↠ R^k`, return an element of `G(k, M; R)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofSurjective\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">ofSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L76-L78","name":"Module.Grassmannian.coe_ofEquiv","line":76,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_ofEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_ofEquiv\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_ofEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofEquiv\">ofEquiv</a> <span class=\"fn\">N</span> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L72-L74","name":"Module.Grassmannian.ofEquiv","line":72,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofEquiv","doc":"Given an isomorphism `M⧸N ↠ R^k`, return an element of `G(k, M; R)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.ofEquiv\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">ofEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L67-L70","name":"Module.Grassmannian.copy","line":67,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.copy","doc":"Copy of an element of the Grassmannian, with a new carrier equal to the old one. Useful to fix\ndefinitional equalities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.copy\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">N'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L59-L63","name":"Module.Grassmannian.coe_mk'","line":59,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_mk'\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Finiteness/Defs.html#Module.Finite\">Module.Finite</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Projective.html#Module.Projective\">Projective</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/FreeLocus.html#Module.rankAtStalk\">rankAtStalk</a> <span class=\"fn\">P</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.mk'\">mk'</a> <span class=\"fn\">N</span> <span class=\"fn\">P</span> <span class=\"fn\">e</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L48-L57","name":"Module.Grassmannian.mk'","line":48,"kind":"def","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.mk'","doc":"An easier constructor that uses a linear equiv and instances. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.mk'\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>) <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">P</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Finiteness/Defs.html#Module.Finite\">Module.Finite</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Projective.html#Module.Projective\">Projective</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/FreeLocus.html#Module.rankAtStalk\">rankAtStalk</a> <span class=\"fn\">P</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span> := by intro p; haveI := PrimeSpectrum.nontrivial p; simp)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian\">Grassmannian</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/kckennylau/EllipticCurve/blob/c93e459c70185ce7440bb4553f5a64145fc853b8/EllipticCurve/Grassmannians/Basic.lean#L45-L46","name":"Module.Grassmannian.coe_mk","line":45,"kind":"theorem","docLink":"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./EllipticCurve/Grassmannians/Basic.html#Module.Grassmannian.coe_mk\"><span class=\"name\">Module</span>.<span class=\"name\">Grassmannian</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Finiteness/Defs.html#Module.Finite\">Module.Finite</a> <span class=\"fn\">R</span> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Projective.html#Module.Projective\">Projective</a> <span class=\"fn\">R</span> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₃</span> : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/FreeLocus.html#Module.rankAtStalk\">rankAtStalk</a> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>) <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.mk\">{</a> <span class=\"fn\">toSubmodule</span> := <span class=\"fn\">N</span>, <span class=\"fn\">finite_quotient</span> := <span class=\"fn\">h₁</span>, <span class=\"fn\">projective_quotient</span> := <span class=\"fn\">h₂</span>, <span class=\"fn\">rankAtStalk_eq</span> := <span class=\"fn\">h₃</span> <a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.mk\">}</a>.<a href=\"./Mathlib/RingTheory/Grassmannian.html#Module.Grassmannian.toSubmodule\">toSubmodule</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></div></div>"}]}