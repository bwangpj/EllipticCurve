{"name":"Mathlib.Algebra.Category.MonCat.ForgetCorepresentable","instances":[{"typeNames":["CategoryTheory.forget"],"name":"MonCat.forget_isCorepresentable","className":"CategoryTheory.Functor.IsCorepresentable"},{"typeNames":["CategoryTheory.forget"],"name":"CommMonCat.forget_isCorepresentable","className":"CategoryTheory.Functor.IsCorepresentable"},{"typeNames":["CategoryTheory.forget"],"name":"AddMonCat.forget_isCorepresentable","className":"CategoryTheory.Functor.IsCorepresentable"},{"typeNames":["CategoryTheory.forget"],"name":"AddCommMonCat.forget_isCorepresentable","className":"CategoryTheory.Functor.IsCorepresentable"}],"imports":["Init","Mathlib.Algebra.Category.MonCat.Basic","Mathlib.Algebra.Group.Equiv.Basic","Mathlib.Algebra.Group.Nat.Hom","Mathlib.CategoryTheory.Yoneda"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L109-L111","name":"AddCommMonCat.forget_isCorepresentable","line":109,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddCommMonCat.forget_isCorepresentable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddCommMonCat.forget_isCorepresentable\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">forget_isCorepresentable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.Functor.IsCorepresentable\">IsCorepresentable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L105-L107","name":"AddMonCat.forget_isCorepresentable","line":105,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddMonCat.forget_isCorepresentable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddMonCat.forget_isCorepresentable\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">forget_isCorepresentable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.Functor.IsCorepresentable\">IsCorepresentable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L101-L103","name":"CommMonCat.forget_isCorepresentable","line":101,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#CommMonCat.forget_isCorepresentable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#CommMonCat.forget_isCorepresentable\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">forget_isCorepresentable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.Functor.IsCorepresentable\">IsCorepresentable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L97-L99","name":"MonCat.forget_isCorepresentable","line":97,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#MonCat.forget_isCorepresentable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#MonCat.forget_isCorepresentable\"><span class=\"name\">MonCat</span>.<span class=\"name\">forget_isCorepresentable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.Functor.IsCorepresentable\">IsCorepresentable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L91-L95","name":"AddCommMonCat.coyonedaObjIsoForget","line":91,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddCommMonCat.coyonedaObjIsoForget","doc":"The forgetful functor `AddCommMonCat.{u} ⥤ Type u` is corepresentable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddCommMonCat.coyonedaObjIsoForget\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">coyonedaObjIsoForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.coyoneda\">CategoryTheory.coyoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat.of\">of</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L85-L89","name":"AddMonCat.coyonedaObjIsoForget","line":85,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddMonCat.coyonedaObjIsoForget","doc":"The forgetful functor `AddMonCat.{u} ⥤ Type u` is corepresentable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddMonCat.coyonedaObjIsoForget\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">coyonedaObjIsoForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.coyoneda\">CategoryTheory.coyoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat.of\">of</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L79-L83","name":"CommMonCat.coyonedaObjIsoForget","line":79,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#CommMonCat.coyonedaObjIsoForget","doc":"The forgetful functor `CommMonCat.{u} ⥤ Type u` is corepresentable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#CommMonCat.coyonedaObjIsoForget\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">coyonedaObjIsoForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.coyoneda\">CategoryTheory.coyoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat.of\">of</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L72-L76","name":"MonCat.coyonedaObjIsoForget","line":72,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#MonCat.coyonedaObjIsoForget","doc":"The forgetful functor `MonCat.{u} ⥤ Type u` is corepresentable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#MonCat.coyonedaObjIsoForget\"><span class=\"name\">MonCat</span>.<span class=\"name\">coyonedaObjIsoForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.coyoneda\">CategoryTheory.coyoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">of</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L65-L68","name":"AddMonoidHom.fromULiftNatEquiv","line":65,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddMonoidHom.fromULiftNatEquiv","doc":"The equivalence `(ULift ℕ →+ α) ≃ α` for any additive monoid `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddMonoidHom.fromULiftNatEquiv\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fromULiftNatEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">α</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L61-L63","name":"AddMonoidHom.fromNatEquiv","line":61,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddMonoidHom.fromNatEquiv","doc":"The equivalence `(ℤ →+ α) ≃ α` for any additive group `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#AddMonoidHom.fromNatEquiv\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fromNatEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">α</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L51-L55","name":"MonoidHom.fromULiftMultiplicativeNatEquiv","line":51,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#MonoidHom.fromULiftMultiplicativeNatEquiv","doc":"The equivalence `(ULift (Multiplicative ℕ) →* α) ≃ α` for any monoid `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#MonoidHom.fromULiftMultiplicativeNatEquiv\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fromULiftMultiplicativeNatEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">α</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L46-L49","name":"MonoidHom.fromMultiplicativeNatEquiv","line":46,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#MonoidHom.fromMultiplicativeNatEquiv","doc":"The equivalence `(Multiplicative ℕ →* α) ≃ α` for any monoid `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#MonoidHom.fromMultiplicativeNatEquiv\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fromMultiplicativeNatEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">α</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L40-L40","name":"uliftPowersHom_apply_apply","line":40,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftPowersHom_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftPowersHom_apply_apply\"><span class=\"name\">uliftPowersHom_apply_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftPowersHom\">uliftPowersHom</a> <span class=\"fn\">M</span>)</span> <span class=\"fn\">a✝</span>)</span> <span class=\"fn\">a✝¹</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a✝</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.toAdd\">Multiplicative.toAdd</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/ULift.html#MulEquiv.ulift\">MulEquiv.ulift</a> <span class=\"fn\">a✝¹</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L40-L40","name":"uliftPowersHom_symm_apply","line":40,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftPowersHom_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftPowersHom_symm_apply\"><span class=\"name\">uliftPowersHom_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftPowersHom\">uliftPowersHom</a> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a✝</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ULift.html#MulEquiv.ulift\">MulEquiv.ulift</a>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> <span class=\"fn\">1</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L38-L42","name":"uliftPowersHom","line":38,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftPowersHom","doc":"Monoid homomorphisms from `ULift (Multiplicative ℕ)` are defined by the image\nof `Multiplicative.ofAdd 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftPowersHom\"><span class=\"name\">uliftPowersHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L34-L34","name":"uliftMultiplesHom_symm_apply","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftMultiplesHom_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftMultiplesHom_symm_apply\"><span class=\"name\">uliftMultiplesHom_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftMultiplesHom\">uliftMultiplesHom</a> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a✝</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ULift.html#AddEquiv.ulift\">AddEquiv.ulift</a>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv.symm\">symm</a></span> <span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L34-L34","name":"uliftMultiplesHom_apply_apply","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftMultiplesHom_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftMultiplesHom_apply_apply\"><span class=\"name\">uliftMultiplesHom_apply_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftMultiplesHom\">uliftMultiplesHom</a> <span class=\"fn\">M</span>)</span> <span class=\"fn\">a✝</span>)</span> <span class=\"fn\">a✝¹</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ULift.html#AddEquiv.ulift\">AddEquiv.ulift</a> <span class=\"fn\">a✝¹</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">a✝</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean#L33-L36","name":"uliftMultiplesHom","line":33,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftMultiplesHom","doc":"Monoid homomorphisms from `ULift ℕ` are defined by the image of `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.html#uliftMultiplesHom\"><span class=\"name\">uliftMultiplesHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span>)</div></div>"}]}