{"name":"Mathlib.CategoryTheory.Monad.Basic","instances":[{"typeNames":["CategoryTheory.Monad","CategoryTheory.Functor"],"name":"CategoryTheory.coeMonad","className":"Coe"},{"typeNames":["CategoryTheory.Comonad","CategoryTheory.Functor"],"name":"CategoryTheory.coeComonad","className":"Coe"},{"typeNames":["CategoryTheory.Monad"],"name":"CategoryTheory.instQuiverMonad","className":"Quiver"},{"typeNames":["CategoryTheory.Comonad"],"name":"CategoryTheory.instQuiverComonad","className":"Quiver"},{"typeNames":["CategoryTheory.Monad"],"name":"CategoryTheory.instCategoryMonad","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Comonad"],"name":"CategoryTheory.instCategoryComonad","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.MonadHom"],"name":"CategoryTheory.instInhabitedMonadHom","className":"Inhabited"},{"typeNames":["CategoryTheory.ComonadHom"],"name":"CategoryTheory.instInhabitedComonadHom","className":"Inhabited"},{"typeNames":["CategoryTheory.monadToFunctor"],"name":"CategoryTheory.instFaithfulMonadFunctorMonadToFunctor","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.monadToFunctor"],"name":"CategoryTheory.instReflectsIsomorphismsMonadFunctorMonadToFunctor","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["CategoryTheory.comonadToFunctor"],"name":"CategoryTheory.instFaithfulComonadFunctorComonadToFunctor","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.comonadToFunctor"],"name":"CategoryTheory.instReflectsIsomorphismsComonadFunctorComonadToFunctor","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["CategoryTheory.Monad"],"name":"CategoryTheory.Monad.instInhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Comonad"],"name":"CategoryTheory.Comonad.instInhabited","className":"Inhabited"}],"imports":["Init","Mathlib.CategoryTheory.Functor.Category","Mathlib.CategoryTheory.Functor.FullyFaithful","Mathlib.CategoryTheory.Functor.ReflectsIso.Basic","Mathlib.CategoryTheory.Limits.Shapes.StrongEpi"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L396-L400","name":"CategoryTheory.Comonad.isSplitEpi_iff_isIso_counit","line":396,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.isSplitEpi_iff_isIso_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.isSplitEpi_iff_isIso_counit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">isSplitEpi_iff_isIso_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.IsSplitEpi\">IsSplitEpi</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L392-L394","name":"CategoryTheory.Comonad.map_counit_app","line":392,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.map_counit_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.map_counit_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">map_counit_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L382-L386","name":"CategoryTheory.Monad.isSplitMono_iff_isIso_unit","line":382,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.isSplitMono_iff_isIso_unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.isSplitMono_iff_isIso_unit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">isSplitMono_iff_isIso_unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.IsSplitMono\">IsSplitMono</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L378-L380","name":"CategoryTheory.Monad.map_unit_app","line":378,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.map_unit_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.map_unit_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">map_unit_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L352-L372","name":"CategoryTheory.Comonad.transport","line":352,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.transport","doc":"Transport a comonad structure on a functor along an isomorphism of functors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.transport\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">transport</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L320-L346","name":"CategoryTheory.Monad.transport","line":320,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.transport","doc":"Transport a monad structure on a functor along an isomorphism of functors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.transport\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">transport</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L309-L310","name":"CategoryTheory.Comonad.instInhabited","line":309,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.instInhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L303-L303","name":"CategoryTheory.Comonad.id_δ_app","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id_δ_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id_δ_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">id_δ_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id\">id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L303-L303","name":"CategoryTheory.Comonad.id_obj","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">id_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id\">id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L303-L303","name":"CategoryTheory.Comonad.id_map","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">id_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id\">id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L303-L303","name":"CategoryTheory.Comonad.id_ε_app","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id_ε_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id_ε_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">id_ε_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id\">id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L302-L307","name":"CategoryTheory.Comonad.id","line":302,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id","doc":"The identity comonad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L295-L296","name":"CategoryTheory.Monad.instInhabited","line":295,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.instInhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L289-L289","name":"CategoryTheory.Monad.id_map","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">id_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id\">id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L289-L289","name":"CategoryTheory.Monad.id_μ_app","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id_μ_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id_μ_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">id_μ_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id\">id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L289-L289","name":"CategoryTheory.Monad.id_η_app","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id_η_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id_η_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">id_η_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id\">id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L289-L289","name":"CategoryTheory.Monad.id_obj","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">id_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id\">id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L288-L293","name":"CategoryTheory.Monad.id","line":288,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id","doc":"The identity monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L280-L280","name":"CategoryTheory.ComonadIso.toNatIso_inv","line":280,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.toNatIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.toNatIso_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadIso</span>.<span class=\"name\">toNatIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.toNatIso\">toNatIso</a> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L280-L280","name":"CategoryTheory.ComonadIso.toNatIso_hom","line":280,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.toNatIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.toNatIso_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadIso</span>.<span class=\"name\">toNatIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.toNatIso\">toNatIso</a> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L278-L282","name":"CategoryTheory.ComonadIso.toNatIso","line":278,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.toNatIso","doc":"An isomorphism of comonads gives a natural isomorphism of the underlying functors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.toNatIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadIso</span>.<span class=\"name\">toNatIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L274-L274","name":"CategoryTheory.MonadIso.toNatIso_inv","line":274,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.toNatIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.toNatIso_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadIso</span>.<span class=\"name\">toNatIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.toNatIso\">toNatIso</a> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L274-L274","name":"CategoryTheory.MonadIso.toNatIso_hom","line":274,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.toNatIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.toNatIso_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadIso</span>.<span class=\"name\">toNatIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.toNatIso\">toNatIso</a> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L270-L276","name":"CategoryTheory.MonadIso.toNatIso","line":270,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.toNatIso","doc":"An isomorphism of monads gives a natural isomorphism of the underlying functors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.toNatIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadIso</span>.<span class=\"name\">toNatIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L265-L266","name":"CategoryTheory.instReflectsIsomorphismsComonadFunctorComonadToFunctor","line":265,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instReflectsIsomorphismsComonadFunctorComonadToFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instReflectsIsomorphismsComonadFunctorComonadToFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instReflectsIsomorphismsComonadFunctorComonadToFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor\">comonadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L260-L263","name":"CategoryTheory.comonadToFunctor_mapIso_comonad_iso_mk","line":260,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor_mapIso_comonad_iso_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor_mapIso_comonad_iso_mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">comonadToFunctor_mapIso_comonad_iso_mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_ε</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_δ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor\">comonadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Functor.mapIso\">mapIso</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk\">ComonadIso.mk</a> <span class=\"fn\">f</span> <span class=\"fn\">f_ε</span> <span class=\"fn\">f_δ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L258-L258","name":"CategoryTheory.instFaithfulComonadFunctorComonadToFunctor","line":258,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instFaithfulComonadFunctorComonadToFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instFaithfulComonadFunctorComonadToFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instFaithfulComonadFunctorComonadToFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor\">comonadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L253-L253","name":"CategoryTheory.comonadToFunctor_obj","line":253,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">comonadToFunctor_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor\">comonadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L253-L253","name":"CategoryTheory.comonadToFunctor_map","line":253,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">comonadToFunctor_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor\">comonadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L251-L256","name":"CategoryTheory.comonadToFunctor","line":251,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor","doc":"The forgetful functor from the category of comonads to the category of endofunctors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comonadToFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">comonadToFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L248-L249","name":"CategoryTheory.instReflectsIsomorphismsMonadFunctorMonadToFunctor","line":248,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instReflectsIsomorphismsMonadFunctorMonadToFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instReflectsIsomorphismsMonadFunctorMonadToFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instReflectsIsomorphismsMonadFunctorMonadToFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor\">monadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L243-L246","name":"CategoryTheory.monadToFunctor_mapIso_monad_iso_mk","line":243,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor_mapIso_monad_iso_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor_mapIso_monad_iso_mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">monadToFunctor_mapIso_monad_iso_mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_η</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_μ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor\">monadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Functor.mapIso\">mapIso</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk\">MonadIso.mk</a> <span class=\"fn\">f</span> <span class=\"fn\">f_η</span> <span class=\"fn\">f_μ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L241-L241","name":"CategoryTheory.instFaithfulMonadFunctorMonadToFunctor","line":241,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instFaithfulMonadFunctorMonadToFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instFaithfulMonadFunctorMonadToFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instFaithfulMonadFunctorMonadToFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor\">monadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L236-L236","name":"CategoryTheory.monadToFunctor_map","line":236,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">monadToFunctor_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor\">monadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L236-L236","name":"CategoryTheory.monadToFunctor_obj","line":236,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">monadToFunctor_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor\">monadToFunctor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L234-L239","name":"CategoryTheory.monadToFunctor","line":234,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor","doc":"The forgetful functor from the category of monads to the category of endofunctors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.monadToFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">monadToFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L214-L214","name":"CategoryTheory.ComonadIso.mk_hom_toNatTrans","line":214,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk_hom_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk_hom_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadIso</span>.<span class=\"name\">mk_hom_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_ε</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_δ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk\">mk</a> <span class=\"fn\">f</span> <span class=\"fn\">f_ε</span> <span class=\"fn\">f_δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L214-L214","name":"CategoryTheory.ComonadIso.mk_inv_toNatTrans","line":214,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk_inv_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk_inv_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadIso</span>.<span class=\"name\">mk_inv_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_ε</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_δ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk\">mk</a> <span class=\"fn\">f</span> <span class=\"fn\">f_ε</span> <span class=\"fn\">f_δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L212-L230","name":"CategoryTheory.ComonadIso.mk","line":212,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk","doc":"Construct a comonad isomorphism from a natural isomorphism of functors where the forward\ndirection is a comonad morphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadIso.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadIso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_ε</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_δ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L194-L194","name":"CategoryTheory.MonadIso.mk_inv_toNatTrans","line":194,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk_inv_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk_inv_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadIso</span>.<span class=\"name\">mk_inv_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_η</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_μ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk\">mk</a> <span class=\"fn\">f</span> <span class=\"fn\">f_η</span> <span class=\"fn\">f_μ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L194-L194","name":"CategoryTheory.MonadIso.mk_hom_toNatTrans","line":194,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk_hom_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk_hom_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadIso</span>.<span class=\"name\">mk_hom_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_η</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_μ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk\">mk</a> <span class=\"fn\">f</span> <span class=\"fn\">f_η</span> <span class=\"fn\">f_μ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L192-L210","name":"CategoryTheory.MonadIso.mk","line":192,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk","doc":"Construct a monad isomorphism from a natural isomorphism of functors where the forward\ndirection is a monad morphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadIso.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadIso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_η</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_μ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L187-L190","name":"CategoryTheory.comp_toNatTrans","line":187,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comp_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.comp_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">comp_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂ </span><span class=\"fn\">T₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">T₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₃</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L183-L185","name":"CategoryTheory.ComonadHom.id_toNatTrans","line":183,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.id_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.id_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">id_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L180-L181","name":"CategoryTheory.instInhabitedComonadHom","line":180,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instInhabitedComonadHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instInhabitedComonadHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instInhabitedComonadHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">G</span> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L175-L178","name":"CategoryTheory.MonadHom.comp_toNatTrans","line":175,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.comp_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.comp_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">comp_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂ </span><span class=\"fn\">T₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">T₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₃</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L171-L173","name":"CategoryTheory.MonadHom.id_toNatTrans","line":171,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.id_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.id_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">id_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L168-L169","name":"CategoryTheory.instInhabitedMonadHom","line":168,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instInhabitedMonadHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instInhabitedMonadHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instInhabitedMonadHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T</span> <span class=\"fn\">T</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L157-L166","name":"CategoryTheory.instCategoryComonad","line":157,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instCategoryComonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instCategoryComonad\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCategoryComonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{max u₁ v₁, max u₁ v₁}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L146-L155","name":"CategoryTheory.instCategoryMonad","line":146,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instCategoryMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instCategoryMonad\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCategoryMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{max u₁ v₁, max u₁ v₁}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L142-L142","name":"CategoryTheory.ComonadHom.ext'_iff","line":142,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.ext'_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.ext'_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">ext'_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L142-L144","name":"CategoryTheory.ComonadHom.ext'","line":142,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.ext'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.ext'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">ext'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L137-L137","name":"CategoryTheory.MonadHom.ext'_iff","line":137,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.ext'_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.ext'_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">ext'_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L137-L139","name":"CategoryTheory.MonadHom.ext'","line":137,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.ext'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.ext'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">ext'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L133-L134","name":"CategoryTheory.instQuiverComonad","line":133,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instQuiverComonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instQuiverComonad\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instQuiverComonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L130-L131","name":"CategoryTheory.instQuiverMonad","line":130,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instQuiverMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.instQuiverMonad\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instQuiverMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L128-L128","name":"CategoryTheory.ComonadHom.app_ε_assoc","line":128,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.app_ε_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.app_ε_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">app_ε_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L128-L128","name":"CategoryTheory.ComonadHom.app_δ_assoc","line":128,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.app_δ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.app_δ_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">app_δ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L127-L127","name":"CategoryTheory.MonadHom.app_η_assoc","line":127,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.app_η_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.app_η_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">app_η_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T₁</span> <span class=\"fn\">T₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L127-L127","name":"CategoryTheory.MonadHom.app_μ_assoc","line":127,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.app_μ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.app_μ_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">app_μ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T₁</span> <span class=\"fn\">T₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L123-L123","name":"CategoryTheory.ComonadHom.app_δ","line":123,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.app_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.app_δ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">app_δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L122-L122","name":"CategoryTheory.ComonadHom.app_ε","line":122,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.app_ε","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.app_ε\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">app_ε</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L121-L121","name":"CategoryTheory.ComonadHom.mk","line":121,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toNatTrans</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">NatTrans</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app_ε</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app_δ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L121-L123","name":"CategoryTheory.ComonadHom.toNatTrans","line":121,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">NatTrans</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L120-L120","name":"CategoryTheory.ComonadHom.ext_iff","line":120,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L120-L120","name":"CategoryTheory.ComonadHom.ext","line":120,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\">ComonadHom</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L119-L123","name":"CategoryTheory.ComonadHom","line":119,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom","doc":"A morphism of comonads is a natural transformation compatible with ε and δ. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.ComonadHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComonadHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">CategoryTheory.NatTrans</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L114-L114","name":"CategoryTheory.MonadHom.app_μ","line":114,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.app_μ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.app_μ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">app_μ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T₁</span> <span class=\"fn\">T₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L113-L113","name":"CategoryTheory.MonadHom.app_η","line":113,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.app_η","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.app_η\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">app_η</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T₁</span> <span class=\"fn\">T₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L112-L112","name":"CategoryTheory.MonadHom.mk","line":112,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toNatTrans</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">NatTrans</a> <span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app_η</span> : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app_μ</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T₁</span> <span class=\"fn\">T₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L112-L115","name":"CategoryTheory.MonadHom.toNatTrans","line":112,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T₁</span> <span class=\"fn\">T₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">NatTrans</a> <span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L111-L111","name":"CategoryTheory.MonadHom.ext_iff","line":111,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T₁</span> <span class=\"fn\">T₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L111-L111","name":"CategoryTheory.MonadHom.ext","line":111,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\">MonadHom</a> <span class=\"fn\">T₁</span> <span class=\"fn\">T₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L110-L115","name":"CategoryTheory.MonadHom","line":110,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom","doc":"A morphism of monads is a natural transformation compatible with η and μ. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.MonadHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonadHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">CategoryTheory.NatTrans</a> <span class=\"fn\"><span class=\"fn\">T₁</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">T₂</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L108-L108","name":"CategoryTheory.Comonad.left_counit_assoc","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.left_counit_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.left_counit_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">left_counit_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L108-L108","name":"CategoryTheory.Comonad.right_counit_assoc","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.right_counit_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.right_counit_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">right_counit_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L108-L108","name":"CategoryTheory.Comonad.coassoc_assoc","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.coassoc_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.coassoc_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">coassoc_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L107-L107","name":"CategoryTheory.Monad.right_unit_assoc","line":107,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.right_unit_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.right_unit_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">right_unit_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L107-L107","name":"CategoryTheory.Monad.left_unit_assoc","line":107,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.left_unit_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.left_unit_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">left_unit_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L90-L91","name":"CategoryTheory.coeComonad","line":90,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.coeComonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.coeComonad\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">coeComonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L87-L88","name":"CategoryTheory.coeMonad","line":87,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.coeMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.coeMonad\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">coeMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L79-L79","name":"CategoryTheory.Comonad.delta_naturality_assoc","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.delta_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.delta_naturality_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">delta_naturality_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L79-L82","name":"CategoryTheory.Comonad.delta_naturality","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.delta_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.delta_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">delta_naturality</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L74-L74","name":"CategoryTheory.Comonad.counit_naturality_assoc","line":74,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.counit_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.counit_naturality_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">counit_naturality_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L74-L77","name":"CategoryTheory.Comonad.counit_naturality","line":74,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.counit_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.counit_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">counit_naturality</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L72-L72","name":"CategoryTheory.Comonad.right_counit","line":72,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.right_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.right_counit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">right_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L71-L71","name":"CategoryTheory.Comonad.left_counit","line":71,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.left_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.left_counit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">left_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\">ε</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L69-L69","name":"CategoryTheory.Comonad.coassoc","line":69,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.coassoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.coassoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">coassoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\">δ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L68-L68","name":"CategoryTheory.Comonad.δ","line":68,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ","doc":"The comultiplication for the comonad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.δ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L66-L66","name":"CategoryTheory.Comonad.ε","line":66,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε","doc":"The counit for the comonad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.ε\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">ε</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L64-L64","name":"CategoryTheory.Comonad.mk","line":64,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFunctor</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε</span> : <span class=\"fn\">toFunctor</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">δ</span> : <span class=\"fn\">toFunctor</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">toFunctor</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coassoc</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">δ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">δ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">δ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">δ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left_counit</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">δ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ε</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">right_counit</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">δ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ε</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L64-L72","name":"CategoryTheory.Comonad.toFunctor","line":64,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad.toFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span>.<span class=\"name\">toFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\">Comonad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L58-L72","name":"CategoryTheory.Comonad","line":58,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad","doc":"The data of a comonad on C consists of an endofunctor G together with natural transformations\nε : G ⟶ 𝟭 C and δ : G ⟶ G ⋙ G satisfying three equations:\n- δ_X ≫ G δ_X = δ_X ≫ δ_(GX) (coassociativity)\n- δ_X ≫ ε_(GX) = 1_X (left counit)\n- δ_X ≫ G ε_X = 1_X (right counit)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Comonad\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Comonad</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L53-L53","name":"CategoryTheory.Monad.mu_naturality_assoc","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.mu_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.mu_naturality_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">mu_naturality_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Y</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L53-L56","name":"CategoryTheory.Monad.mu_naturality","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.mu_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.mu_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">mu_naturality</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L48-L48","name":"CategoryTheory.Monad.unit_naturality_assoc","line":48,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.unit_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.unit_naturality_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">unit_naturality_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Y</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L48-L51","name":"CategoryTheory.Monad.unit_naturality","line":48,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.unit_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.unit_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">unit_naturality</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L46-L46","name":"CategoryTheory.Monad.right_unit","line":46,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.right_unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.right_unit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">right_unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L45-L45","name":"CategoryTheory.Monad.left_unit","line":45,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.left_unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.left_unit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">left_unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\">η</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L44-L44","name":"CategoryTheory.Monad.assoc","line":44,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\">μ</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L43-L43","name":"CategoryTheory.Monad.μ","line":43,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ","doc":"The multiplication for the monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.μ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">μ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L41-L41","name":"CategoryTheory.Monad.η","line":41,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η","doc":"The unit for the monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.η\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">η</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\">toFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L39-L39","name":"CategoryTheory.Monad.mk","line":39,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFunctor</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">η</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">toFunctor</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">toFunctor</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">toFunctor</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assoc</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left_unit</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">right_unit</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span></span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L39-L46","name":"CategoryTheory.Monad.toFunctor","line":39,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad.toFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">toFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">Monad</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Monad/Basic.lean#L33-L46","name":"CategoryTheory.Monad","line":33,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad","doc":"The data of a monad on C consists of an endofunctor T together with natural transformations\nη : 𝟭 C ⟶ T and μ : T ⋙ T ⟶ T satisfying three equations:\n- T μ_X ≫ μ_X = μ_(TX) ≫ μ_X (associativity)\n- η_(TX) ≫ μ_X = 1_X (left unit)\n- Tη_X ≫ μ_X = 1_X (right unit)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ v₁)</div></div>"}]}