{"name":"Mathlib.CategoryTheory.Limits.Types.ColimitType","instances":[],"imports":["Init","Mathlib.CategoryTheory.Functor.Basic","Mathlib.CategoryTheory.Types"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L308-L313","name":"CategoryTheory.Functor.isColimit_coconeTypes","line":308,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.isColimit_coconeTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.isColimit_coconeTypes\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">isColimit_coconeTypes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes\">coconeTypes</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L299-L304","name":"CategoryTheory.Functor.CoconeTypes.isColimit_precompose_iff","line":299,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.isColimit_precompose_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.isColimit_precompose_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">isColimit_precompose_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀')</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">naturality</span> : <span class=\"fn\">∀ {<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>), <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j'</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose\">precompose</a></span> <span class=\"fn\">(fun {<span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j'</span>)</span></span>)</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L294-L297","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.precompose","line":294,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.precompose","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.precompose\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">precompose</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀')</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">naturality</span> : <span class=\"fn\">∀ {<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>), <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j'</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose\">precompose</a></span> <span class=\"fn\">(fun {<span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j'</span>)</span></span>)</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L275-L291","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore.isColimit","line":275,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.isColimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.isColimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span>.<span class=\"name\">isColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L269-L269","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.isColimitCore_desc","line":269,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.isColimitCore_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.isColimitCore_desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">isColimitCore_desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hc</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.isColimitCore\">isColimitCore</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.desc\">desc</a></span> <span class=\"fn\">c'</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hc</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.desc\">desc</a></span> <span class=\"fn\">c'</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L266-L273","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.isColimitCore","line":266,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.isColimitCore","doc":"When `c : F.CoconeTypes` satisfies the property\n`c.IsColimit`, this is a term in `IsColimitCore.{w₂} c`\nfor any universe `w₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.isColimitCore\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">isColimitCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L247-L261","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore.precompose","line":247,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.precompose","doc":"A colimit cocone for `F : J ⥤ Type w₀` induces a colimit cocone\nfor `G : J ⥤ Type w₉'` when we have a natural equivalence `G.obj j ≃ F.obj j`\nfor all `j : J`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.precompose\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span>.<span class=\"name\">precompose</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀')</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">naturality</span> : <span class=\"fn\">∀ {<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>), <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j'</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose\">precompose</a></span> <span class=\"fn\">(fun {<span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">j'</span>)</span></span>)</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L231-L245","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore.down","line":231,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.down","doc":"Any structure `IsColimitCore.{max w₂ w₃} c` can be\nlowered to `IsColimitCore.{w₂} c` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.down\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span>.<span class=\"name\">down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L225-L229","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore.fac_apply","line":225,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.fac_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.fac_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span>.<span class=\"name\">fac_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hc</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.desc\">desc</a></span> <span class=\"fn\">c'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L216-L216","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore.funext","line":216,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.funext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.funext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span>.<span class=\"name\">funext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> w₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L214-L214","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore.fac","line":214,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.fac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.fac\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span>.<span class=\"name\">fac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.desc\">desc</a></span> <span class=\"fn\">c'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L213-L213","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore.desc","line":213,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.desc","doc":"any cocone descends (in a unique way) as a map "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span>.<span class=\"name\">desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L211-L211","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore.mk","line":211,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desc</span> : <span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\">∀ (<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>) (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\">desc</span> <span class=\"fn\">c'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></span> := by aesop)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funext</span> : <span class=\"fn\">∀ {<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> w₂} {<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\">T</span></span>}, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span>)</span> → <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\">IsColimitCore</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L206-L217","name":"CategoryTheory.Functor.CoconeTypes.IsColimitCore","line":206,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore","doc":"Structure which expresses that `c : F.CoconeTypes`\nsatisfies the universal property of the colimit of types:\ncompatible families of maps `F.obj j → T` (where `T`\nis any type in a specified universe) descend in a unique\nway as maps `c.pt → T`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimitCore\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimitCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u w₀) w₁) (w₂ + 1))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L196-L202","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.of_equiv","line":196,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.of_equiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">he</span> : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L191-L194","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.fac_apply","line":191,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.fac_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.fac_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">fac_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hc</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.desc\">desc</a></span> <span class=\"fn\">c'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L186-L189","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.fac","line":186,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.fac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.fac\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">fac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hc</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.desc\">desc</a></span> <span class=\"fn\">c'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L180-L184","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.desc","line":180,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.desc","doc":"If `F : J ⥤ Type w₀` and `c : F.CoconeTypes` is colimit, then\n`c` satisfies a heterogeneous universe version of the universal\nproperty of colimits. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L176-L178","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.exists_desc","line":176,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.exists_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.exists_desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">exists_desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">f</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L170-L174","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.funext","line":170,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.funext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.funext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">funext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> w₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L164-L168","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.ι_jointly_surjective","line":164,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.ι_jointly_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.ι_jointly_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">ι_jointly_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">j</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">J</span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L159-L162","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.equiv_symm_ι_apply","line":159,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.equiv_symm_ι_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.equiv_symm_ι_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">equiv_symm_ι_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hc</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.equiv\">equiv</a></span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L155-L155","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.equiv_apply","line":155,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.equiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.equiv_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">equiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitType\">ColimitType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hc</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.equiv\">equiv</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType\">descColimitType</a></span> <span class=\"fn\">c</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L153-L157","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.equiv","line":153,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.equiv","doc":"Given `F : J ⥤ Type w₀`, and `c : F.CoconeTypes` a cocone that is colimit,\nthis is the equivalence `F.ColimitType ≃ c.pt`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.equiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitType\">ColimitType</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L145-L145","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.bijective","line":145,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.bijective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType\">descColimitType</a></span> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L144-L144","name":"CategoryTheory.Functor.CoconeTypes.IsColimit.mk","line":144,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bijective</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType\">descColimitType</a></span> <span class=\"fn\">c</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\">IsColimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L141-L145","name":"CategoryTheory.Functor.CoconeTypes.IsColimit","line":141,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit","doc":"Given `F : J ⥤ Type w₀` and `c : F.CoconeTypes`, this is the property\nthat `c` is a colimit. It is defined by saying the canonical map\n`F.descColimitType c : F.ColimiType → c.pt` is a bijection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.IsColimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">IsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L133-L135","name":"CategoryTheory.Functor.descColimitType_ιColimitType_apply","line":133,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType_ιColimitType_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType_ιColimitType_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">descColimitType_ιColimitType_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType\">descColimitType</a></span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L129-L131","name":"CategoryTheory.Functor.descColimitType_comp_ι","line":129,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType_comp_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType_comp_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">descColimitType_comp_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType\">descColimitType</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L124-L127","name":"CategoryTheory.Functor.descColimitType","line":124,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType","doc":"An heterogeneous universe version of the universal property of the colimit is\nsatisfied by `F.ColimitType` together the maps `F.ιColimitType j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.descColimitType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">descColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitType\">ColimitType</a></span> → <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L119-L119","name":"CategoryTheory.Functor.coconeTypes_ι","line":119,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">coconeTypes_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes\">coconeTypes</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L119-L119","name":"CategoryTheory.Functor.coconeTypes_pt","line":119,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">coconeTypes_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes\">coconeTypes</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitType\">ColimitType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L118-L122","name":"CategoryTheory.Functor.coconeTypes","line":118,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes","doc":"The cocone corresponding to `F.ColimitType`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.coconeTypes\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">coconeTypes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L113-L116","name":"CategoryTheory.Functor.ιColimitType_map","line":113,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">ιColimitType_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L108-L111","name":"CategoryTheory.Functor.ιColimitType_jointly_surjective","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType_jointly_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType_jointly_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">ιColimitType_jointly_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitType\">ColimitType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">j</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">J</span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L103-L106","name":"CategoryTheory.Functor.ιColimitType_eq_iff","line":103,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType_eq_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">ιColimitType_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\">ιColimitType</a></span> <span class=\"fn\">j'</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Relation.html#Relation.EqvGen\">Relation.EqvGen</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitTypeRel\">ColimitTypeRel</a></span> <a href=\"./Init/Core.html#Sigma.mk\">⟨</a><span class=\"fn\">j</span>, <span class=\"fn\">x</span><a href=\"./Init/Core.html#Sigma.mk\">⟩</a> <a href=\"./Init/Core.html#Sigma.mk\">⟨</a><span class=\"fn\">j'</span>, <span class=\"fn\">y</span><a href=\"./Init/Core.html#Sigma.mk\">⟩</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L99-L101","name":"CategoryTheory.Functor.ιColimitType","line":99,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType","doc":"The canonical maps `F.obj j → F.ColimitType`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ιColimitType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">ιColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitType\">ColimitType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L95-L97","name":"CategoryTheory.Functor.ColimitType","line":95,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitType","doc":"The colimit type of a functor `F : J ⥤ Type w₀`. (It may not\nbe in `Type w₀`.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">ColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u w₀)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L89-L93","name":"CategoryTheory.Functor.ColimitTypeRel","line":89,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitTypeRel","doc":"Given `F : J ⥤ Type w₀`, this is the relation `Σ j, F.obj j` which\ngenerates an equivalence relation such that the quotient identifies\nto the colimit type of `F`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.ColimitTypeRel\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">ColimitTypeRel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span></span> → <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L78-L78","name":"CategoryTheory.Functor.CoconeTypes.precompose_ι","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">precompose_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀')</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">naturality</span> : <span class=\"fn\">∀ {<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>), <span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">j'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose\">precompose</a></span> <span class=\"fn\">app</span> <span class=\"fn\">naturality</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L78-L78","name":"CategoryTheory.Functor.CoconeTypes.precompose_pt","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">precompose_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀')</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">naturality</span> : <span class=\"fn\">∀ {<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>), <span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">j'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose\">precompose</a></span> <span class=\"fn\">app</span> <span class=\"fn\">naturality</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L76-L85","name":"CategoryTheory.Functor.CoconeTypes.precompose","line":76,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose","doc":"The cocone for `G : J ⥤ Type w₀'` that is deduced from a cocone for `F : J ⥤ Type w₀`\nand a natural map `G.obj j → F.obj j` for all `j : J`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.precompose\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">precompose</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀')</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">naturality</span> : <span class=\"fn\">∀ {<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>), <span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">j'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L70-L70","name":"CategoryTheory.Functor.CoconeTypes.postcomp_pt","line":70,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.postcomp_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.postcomp_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">postcomp_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> w₂}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.postcomp\">postcomp</a></span> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L70-L70","name":"CategoryTheory.Functor.CoconeTypes.postcomp_ι","line":70,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.postcomp_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.postcomp_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">postcomp_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> w₂}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.postcomp\">postcomp</a></span> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L68-L74","name":"CategoryTheory.Functor.CoconeTypes.postcomp","line":68,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.postcomp","doc":"Given `c : F.CoconeTypes` and a map `φ : c.pt → T`, this is\nthe cocone for `F` obtained by postcomposition with `φ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.postcomp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">postcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> w₂}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span> → <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L63-L66","name":"CategoryTheory.Functor.CoconeTypes.ι_naturality_apply","line":63,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι_naturality_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι_naturality_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">ι_naturality_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L54-L54","name":"CategoryTheory.Functor.CoconeTypes.ι_naturality","line":54,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">ι_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\">ι</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L53-L53","name":"CategoryTheory.Functor.CoconeTypes.ι","line":53,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι","doc":"a family of maps to `pt` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span> → <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\">pt</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L51-L51","name":"CategoryTheory.Functor.CoconeTypes.pt","line":51,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt","doc":"the point of the cocone "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w₁</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L49-L49","name":"CategoryTheory.Functor.CoconeTypes.mk","line":49,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pt</span> : <a href=\"./foundational_types.html\">Type</a> w₁)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span></span> → <span class=\"fn\">pt</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι_naturality</span> : <span class=\"fn\">∀ {<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span>), <span class=\"fn\"><span class=\"fn\">ι</span> <span class=\"fn\">j'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ι</span> <span class=\"fn\">j</span></span></span> := by aesop)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\">CoconeTypes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean#L47-L55","name":"CategoryTheory.Functor.CoconeTypes","line":47,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes","doc":"Given a functor `F : J ⥤ Type w₀`, this is a \"cocone\" of `F` where\nwe allow the point `pt` to be in a different universe than `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Types/ColimitType.html#CategoryTheory.Functor.CoconeTypes\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">CoconeTypes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">J</span> <a href=\"./foundational_types.html\">(Type</a> w₀)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u w₀) (w₁ + 1))</div></div>"}]}