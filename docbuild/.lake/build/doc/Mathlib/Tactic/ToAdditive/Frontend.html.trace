{"synthetic": false,
 "outputs": null,
 "log":
 [{"message":
   ".> ELAN=elan ELAN_HOME=C:\\Users\\kc_ke\\.elan ELAN_TOOLCHAIN=leanprover/lean4:v4.22.0-rc3 LAKE=c:\\Users\\kc_ke\\.elan\\toolchains\\leanprover--lean4---v4.22.0-rc3\\bin\\lake.exe LAKE_HOME=c:\\Users\\kc_ke\\.elan\\toolchains\\leanprover--lean4---v4.22.0-rc3 LAKE_PKG_URL_MAP={} LAKE_NO_CACHE=false LAKE_ARTIFACT_CACHE=false LAKE_CACHE_DIR=C:\\Users\\kc_ke\\.elan\\toolchains\\leanprover--lean4---v4.22.0-rc3\\lake\\cache LEAN=c:\\Users\\kc_ke\\.elan\\toolchains\\leanprover--lean4---v4.22.0-rc3\\bin\\lean.exe LEAN_GITHASH=7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d LEAN_SYSROOT=c:\\Users\\kc_ke\\.elan\\toolchains\\leanprover--lean4---v4.22.0-rc3 LEAN_AR=c:\\Users\\kc_ke\\.elan\\toolchains\\leanprover--lean4---v4.22.0-rc3\\bin\\llvm-ar.exe LEAN_CC= LEAN_PATH=C:\\EllipticCurve\\.lake\\packages\\batteries\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\Qq\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\aesop\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\proofwidgets\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\importGraph\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\LeanSearchClient\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\plausible\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\mathlib\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\MD4Lean\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\BibtexQuery\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\UnicodeBasic\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\Cli\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\.lake\\packages\\doc-gen4\\.lake\\build\\lib\\lean;C:\\EllipticCurve\\docbuild\\.lake\\build\\lib\\lean;c:\\Users\\kc_ke\\.elan\\toolchains\\leanprover--lean4---v4.22.0-rc3\\lib\\lean LEAN_SRC_PATH=C:\\EllipticCurve\\.lake\\packages\\batteries;C:\\EllipticCurve\\.lake\\packages\\batteries;C:\\EllipticCurve\\.lake\\packages\\Qq;C:\\EllipticCurve\\.lake\\packages\\aesop;C:\\EllipticCurve\\.lake\\packages\\aesop;C:\\EllipticCurve\\.lake\\packages\\proofwidgets;C:\\EllipticCurve\\.lake\\packages\\proofwidgets;C:\\EllipticCurve\\.lake\\packages\\importGraph;C:\\EllipticCurve\\.lake\\packages\\importGraph;C:\\EllipticCurve\\.lake\\packages\\LeanSearchClient;C:\\EllipticCurve\\.lake\\packages\\LeanSearchClient;C:\\EllipticCurve\\.lake\\packages\\plausible;C:\\EllipticCurve\\.lake\\packages\\plausible;C:\\EllipticCurve\\.lake\\packages\\mathlib;C:\\EllipticCurve\\.lake\\packages\\mathlib;C:\\EllipticCurve\\.lake\\packages\\mathlib;C:\\EllipticCurve\\.lake\\packages\\mathlib;C:\\EllipticCurve\\.lake\\packages\\mathlib;C:\\EllipticCurve\\.lake\\packages\\mathlib;C:\\EllipticCurve\\.lake\\packages\\mathlib;C:\\EllipticCurve\\.lake\\packages\\MD4Lean;C:\\EllipticCurve\\.lake\\packages\\MD4Lean;C:\\EllipticCurve\\.lake\\packages\\BibtexQuery;C:\\EllipticCurve\\.lake\\packages\\UnicodeBasic;C:\\EllipticCurve\\.lake\\packages\\UnicodeBasic;C:\\EllipticCurve\\.lake\\packages\\Cli;C:\\EllipticCurve;C:\\EllipticCurve\\.lake\\packages\\doc-gen4;c:\\Users\\kc_ke\\.elan\\toolchains\\leanprover--lean4---v4.22.0-rc3\\src\\lean\\lake PATH C:\\EllipticCurve\\.lake\\packages\\doc-gen4\\.lake\\build\\bin\\doc-gen4.exe single --build C:\\EllipticCurve\\docbuild\\.lake\\build Mathlib.Tactic.ToAdditive.Frontend https://github.com/leanprover-community/mathlib4/blob/80ef7ee04d6e4d69bb5ec32dc5fc93ed19cd1fbc/Mathlib/Tactic/ToAdditive/Frontend.lean",
   "level": "trace"},
  {"message":
   "stdout:\nWARNING: Failed to calculate equational lemmata for ToAdditive.nameDict: (deterministic) timeout at `whnf`, maximum number of heartbeats (5000) has been reached\n\nNote: Use `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for ToAdditive.fixAbbreviation: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\n\nNote: Use `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)",
   "level": "info"}],
 "inputs":
 [["<collection>",
   [["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Data\\Nat\\Notation.html",
     "982472456295306637"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Data\\String\\Defs.html",
     "7614560159447026355"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Data\\Array\\Defs.html",
     "10349461376857741629"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Lean\\Expr\\ReplaceRec.html",
     "15054139764225489512"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Lean\\EnvExtension.html",
     "2172632191547343878"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Lean\\Meta\\Simp.html",
     "3490702960075483765"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Lean\\Name.html",
     "1111292143222733884"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Batteries\\Lean\\NameMapAttribute.html",
     "9322224116602470127"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Batteries\\Tactic\\Lint.html",
     "18252449861224901002"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Batteries\\Tactic\\Trans.html",
     "6897989652213502013"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Tactic\\Eqns.html",
     "4537727510013933169"],
    ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc\\Mathlib\\Tactic\\Simps\\Basic.html",
     "421856546793933025"]]],
  ["C:\\EllipticCurve\\docbuild\\.lake\\build\\doc-data\\references.json",
   "11893762902049086281"],
  ["C:\\EllipticCurve\\.lake\\packages\\doc-gen4\\.lake\\build\\bin\\doc-gen4.exe",
   "6908948172941974985"],
  ["Mathlib.Tactic.ToAdditive.Frontend:leanArts", "12759201422367021363"]],
 "depHash": "15932742889577526882"}